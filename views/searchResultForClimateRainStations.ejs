<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Search Result</title>
    <link rel="stylesheet" href="css/style.css">
    <script src="https://cdn.jsdelivr.net/npm/@linways/table-to-excel@1.0.4/dist/tableToExcel.min.js" defer></script>
    <script src="https://kit.fontawesome.com/a076d05399.js"></script>
</head>

<body>
    <div class="result-container">
        <table class="table" id="main-table-result">
            <div id="paste-here">Paste Here</div>
            <caption>Rezultati pretrage</caption>
            <thead>
                <tr>
                    <th>Dan</th>
                    <th>Meteorološka<br />stanica</th>
                    <th>Padavine</th>
                    <th>Sneg</th>
                    <th>Sliv</th>
                    <th>Opština</th>
                </tr>
            </thead>
            <tbody class="search-result">
                <% result.forEach(item=> { %>
                    <tr class="one-row">
                        <td class="cell" data-label="Dan" title=<%= item["_id"] %>>
                            <%= item["date"].toLocaleDateString("sr-SR") %>
                        </td>
                        <td class="cell" data-label="Meteorološka stanica">
                            <%= item["Stanica"] %>
                        </td>
                        <td class="cell" data-label="Padavine">
                            <%= item["Padavine"] %>
                        </td>
                        <td class="cell" data-label="Sneg">
                            <%= item["Sneg"] %>
                        </td>
                        <td class="cell" data-label="Sliv">
                            <%= item["Sliv"] %>
                        </td>
                        <td class="cell" data-label="Opština">
                            <%= item["Opština"] %>
                        </td>
                    </tr>
                    <% }) %>
            </tbody>
            <tfoot>
                <tr>
                    <th colspan="10">
                        <p>Ukupno <span>
                                <%= result.length %>
                            </span> dokumenata pronađeno.</p>
                    </th>
                </tr>
            </tfoot>
        </table>
        <div class="btn-wrapper">
            <button id="htmlToExcel">Download as <span>Excel</span></button>
            <button type="submit" id="htmlToCSV">Download as <span>CSV</span></button>
            <button id="btnChartMain">Create a <span>Chart</span></button>
        </div>
    </div>
    <%- include('./partials/gotopbtn.ejs') %>
</body>
<script>
const asExcel = document.getElementById("htmlToExcel")
const asCSV = document.getElementById("htmlToCSV")
const table = document.getElementById("main-table-result")
asExcel.addEventListener("click", () => TableToExcel.convert(table))
asCSV.addEventListener("click", () => (exportTableToCSV(table, "searchResult.csv")))

function downloadCSV(csv, filename) {
    const csvFile = new Blob([csv], { type: "text/csv" })
    const downloadLink = document.createElement("a")
    downloadLink.download = filename
    downloadLink.href = window.URL.createObjectURL(csvFile)
    downloadLink.style.display = "none"
    document.body.appendChild(downloadLink)
    downloadLink.click()
}

function exportTableToCSV(htmlTable, filename) {
        let csv = []
        let rows = htmlTable.querySelectorAll("tr");
        for (let i = 0; i < rows.length; i++) {
            let row = []
            let cols = rows[i].querySelectorAll("td, th")
            for (let j = 0; j < cols.length; j++) {
                let data = cols[j].innerText.replace(/(\r\n|\n|\r)/gm, '').replace(/(\s\s)/gm, ' ')
                data = data.replace(/"/g, '""')
                row.push('"' + data + '"')
            }
            csv.push(row.join(","))
        }
        downloadCSV(csv.join("\n"), filename)
    }

document.addEventListener("DOMContentLoaded", init)

function init() {
    const btnChart = document.getElementById("btnChartMain")
    btnChart.addEventListener("click", popup)
}

window.addEventListener("message", (event) => {
    if (event.data?.foo) {
        response.innerText = event.data.labels;
    }
    if (event.data?.msg) {
        response.innerText = event.data.msg;
    }
});

function popup() {
    const params = `about=blank, blank=yes, scrollbars=no, resizable=no, status=no, location=no, toolbar=no, menubar=no, width=1000, height=800`;
    const popupWindow = window.open("chart2.html", "chart", "fullscreen");
    if (popupWindow.outerWidth < screen.availWidth || popup.outerHeight < screen.availHeight) {
        popupWindow.moveTo(0, 0);
        popupWindow.resizeTo(screen.availWidth, screen.availHeight);
    }
    const data1 = JSON.parse(JSON.stringify(`<%= dateArray %>`));
    const data2 = JSON.parse(JSON.stringify(`<%= padavineArray %>`));
    const data3 = JSON.parse(JSON.stringify(`<%= snegArray %>`));
    setTimeout(() => {
        popupWindow.postMessage({ station: `<%= result[0].Stanica %>`, labels: data1, padavine: data2, sneg: data3 }, "*");
    }, 1000)
}

const dani = document.querySelectorAll("td[data-label]");
dani.forEach(dan => {
    try {
        const label = dan.getAttribute("data-label");
        if (label === "Dan") {
            dan.addEventListener("click", async (ev) => {
                await navigator.clipboard.writeText(ev.target.getAttribute("title"));
                console.log("Text copied!");
            })
        }
    } catch (error) {
        console.log("Failed copying to clipboard");
    }
});
const pasteHere = document.getElementById("paste-here");
pasteHere.addEventListener("click", async (ev) => {
    try {
        ev.target.innerText = await navigator.clipboard.readText();
        console.log("Text pasted!");
    } catch (error) {
        console.log("Failed to read clipboard");
    }
})
</script>

</html>